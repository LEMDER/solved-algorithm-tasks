#include <iostream>
#include <conio.h>
using namespace std;

bool game_over;
const int longs = 20;
const int high = 20;
//координаты элементов: змея, еда, хвост и его количество
int x, y, foodX, foodY, score;
int tailX[100], tailY[100];
int nTail;
enum controller {STOP = 0, LEFT, RIGHT, UP, DOWN};
controller dir;

void setup() {
    game_over = false;
    dir = STOP;
    x = longs / 2 - 1;
    y = high / 2 - 1;
    foodX = rand() % longs;
    foodY = rand() % high;
    score = 0;
    // еда спавнится в рандомном месте
}

void draw() {
    system("cls");
    for (int i = 0; i < longs + 1; i++)
        cout << "#";
        cout << endl;

    for (int i = 0; i < high; i++) {
        for (int j = 0; j < longs; j++) {
            if (j == 0 || j == longs - 1)
                cout << "#";
            if (i == y && j == x)
                cout << "0";
            else if (i == foodY && j == foodX)
                cout << "*";
            else {
                bool print = false;
                for (int g = 0; g < nTail; g++) {
                    if (tailX[g] == j && tailY[g] == i) {
                        print = true;
                        cout << "o";
                    }
                }
                if(!print)
                cout << " ";
            }
        }
        cout << endl;
    }

    for (int i = 0; i < longs + 1; i++) 
        cout << "#";
        cout << endl;
        cout << "Score: " << score << endl;
}

void input() {
    // управление кнопками когда запустился
    if (_kbhit()) {
        switch (_getch()) {
        case 'a':
            dir = LEFT;
            break;

        case 'd':
            dir = RIGHT;
            break;

        case 'w':
            dir = UP;
            break;

        case 's':
            dir = DOWN;
            break;

        case 'x':
            game_over = true;
            break;
        }
    }
}

void logic() {
    // повторение траектории, Хвост
    int prevX = tailX[0];
    int prevY = tailY[0];
    int prev2X, prev2Y;
    tailX[0] = x;
    tailY[0] = y;

    for (int i = 1; i < nTail; i++) {
        prev2X = tailX[i];
        prev2Y = tailY[i];
        tailX[i] = prevX;
        tailY[i] = prevY;
        prevX = prev2X;
        prevY = prev2Y;
    }


    // движение самой змейки
    switch (dir) {
    case LEFT:
        x--;
        break;

    case RIGHT:
        x++;
        break;

    case UP:
        y--;
        break;

    case DOWN:
        y++;
        break;
    }

    // врезаться в стену
    if (x >= longs - 1)
        x = 0;
    else if (x < 0)
        x = longs - 2;

    if (y >= high)
        y = 0;
    else if (y < 0)
        x = high - 1;

    // сьесть хвост - game over
    for (int i = 0; i < nTail; i++) {
        if (tailX[i] == x && tailY[i] == y)
            game_over = true;
    }

    // поедание еды и +очко
    if (x == foodX && y == foodY) {
        score += 10;
        // заного спавнить еду
        foodX = rand() % longs;
        foodY = rand() % high;
        nTail++;
    }
}

int main()
{
    setup();

    while (!game_over) {
        draw();
        input();
        logic();

    }

    return 0;
}
