1)
INPUT:
5
6 9 5 -1 -8
OUTPUT:
3
(6 + 5 + (- 8) = 3

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    int sum = 0;
    for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
        if((i-a.begin()) % 2 == 0){
	    sum += *i;
	}
    }
    
    cout << "SUM OF ELEMENTS:" << sum << endl;
    

    return 0;
}


2)

INPUT:
5
6 9 5 1 8
OUTPUT:
3 and 12

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    int sum = 0;
    int count = 0;
    for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
        if( a.at(n-1) > *i){
	    sum += *i;
	    count++;
    	}
    }
    
    cout << count << " and " << sum << endl;
    

    return 0;
}


3)

INPUT:
5
1 2 3 4 5 6 7 8 9 10

OUTPUT:
2 4 6 8 10

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    int sum = 0;
    int count = 0;
    for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
        if(*i%2 != 0){
	    a.erase(i);
    	}
    }
    
    for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
        cout << *i << " ";
    }
    

    return 0;
}



4)
INPUT:
10
1 2 3 4 5 6 7 8 9 10

OUTPUT:
9

#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    
    int max = a.at(0), index = 0;
    for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
        if(*i%2 != 0 && *i > max){
	    max = *i;
            index = distance(a.begin(), i);
    	}
    }
    
    cout << endl << a[index];
    

    return 0;
}

5)
INPUT:
11
2 3 4 1 5 6 1 7 8 9 10

OUTPUT:
The element is  1 and it is located in indexes 3 and 6
2 3 4 5 6 7 8 9 10


#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    
    int element = 0;
    int index = 0;
    int index2 = 0;
    for(int i = 0; i < n; i++){
        for(int j = 0; j < a.size(); j++){
        if(a[i] == a[j] && i != j) {
        element = a[i];
	    index = i;
	    index2 = j;
	    
    	}
        }
    }
    a.erase(a.begin() + index);
	a.erase(a.begin() + index2);
    
    cout << endl << "THE ELEMENT IS " << element << " AND IT'S LOCATED IN INDEXES:" << index << " and " << index2 << endl;
    
     for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
         cout << *i << " ";
     }
    
    

    return 0;
}



6)

Input:
11
2 3 4 1 5 6 1 5 8 5 10
Output:
number 5 appears 3 times
5 5 5 2 3 4 1 5 6 1 5 8 5 10


#include <iostream>
#include <vector>
using namespace std;

int main()
{
    cout << "INSERT SIZE OF VECTOR:";
    int n;
    cin >> n;
    
    vector<int> a(n);
    cout << "INSERT VECTOR:";
    for(int i =0; i < n; i++){
        cin >> a[i];
    }
    
    int count = 1;
    int temp;
    int element = 0;
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < a.size(); j++){
            if(a[i] == a[j] && i != j) {
                element = a[i];
                count++;
        	}
        }
    	if(count <= 2){
    	    count = 1;
        }
    	else{
    	    temp = a[i];
    	    break;
    	}
    }

   
   a.insert(a.begin() , count, temp); 
    cout << endl << "NUMBER " << element << " APPEARS " << count << " TIMES " << endl;
    
     for(vector<int>::iterator i = a.begin(); i != a.end(); i++){
         cout << *i << " ";
     }
    
    

    return 0;
}
