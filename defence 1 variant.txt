IT2-2011
1)

#include <iostream>

using namespace std;

void shell(int arr[], int n, int m){
    for(int step = n; step > 0; step /=2){
        for(int i = step; i < m; i++){
            for(int j = i - step; i >=0 && arr[j] > arr[j+step]; j-=step){
                swap(arr[j], arr[j+step]);
            }
        }
    }
}

int main()
{
    int n = 5;
    int m = 10;
    int arr[n];
    int array[n];
    int arrr[m];
    
    cout << "INSERT FIRST ARRAY:";
    for(int i = 0; i<n;i++){
        cin >> arr[i];
    }
    cout << "INSERT SECOND ARRAY:";
    for(int i = 0; i < n; i++){
        cin >> array[i];
    }
    
    int k = 0;
    for(int i = 0; i < n; i++){
       arrr[k++] = arr[i];
    }
    for(int i = 0; i < n; i++){
       arrr[k++] = array[i];
    }
    
    
    cout << "SORTED ARRAY:" << endl;
    shell(arrr, n, m);
    for(int i = 0; i < m; i++){
        cout << arrr[i] << " ";
    }
    
    

    return 0;
}








2)
#include <iostream>
#include<cmath>

using namespace std;

void qsort(int arrr[], int begin, int end){
    int left = begin, right = end;
    int piv = arrr[(left+right) / 2];
    while(left <= right){
        while(arrr[left] < piv){
            left++;
        }
        while (arrr[right] > piv){
            right--;
        }
        if(left <= right){
            swap(arrr[left++], arrr[right--]);
        }
    }
    if(begin < right){
        qsort(arrr,begin, right);
    }
    if(end > left){
        qsort(arrr,left, end);
    }
    
}

int main()
{
    int n;
    cout << "INSERT N:";
    cin >> n;
    int arr[n];
    
    for(int i = 0; i < n; i++){
        cin >> arr[i];
    }
    
    int aa = 0, bb = 0, cc;
    
    for(int i = 0; i < n; i++){
        if(arr[i] %2 != 0){
            bb++;
        }
    }
    cc = bb;  
    int arrr[cc];
    
    for(int i = 0; i <n; i++){
        if(arr[i] %2 ==0){
            arrr[aa] = arr[i];
            aa++;
        }
    }
    qsort(arrr, 0, n);
    for(int i = 0; i < n; i++){
        cout << arrr[i] << " ";
    }

    return 0;
}

