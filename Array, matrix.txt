Array: High lvl
1)
#include <iostream>
using namespace std;
int main(){

    int a, i, b;
    cout << "INSERT BINARY NUMBER:";
    cin >> a;

    while (a != 0) {
        b = a % 2;
        cout << b;
        a = a / 2;
    }
    return 0;
}



2)
#include <iostream>
using namespace std;
int main(){

    int a, i, b;
    cout << "INSERT BINARY NUMBER:";
    cin >> a;

    if(a != 0) {
        b = a % 8;
        cout << b;
       
    }
    return 0;
}




7)
#include <iostream>
using namespace std;
int main(){
    int arr[15];
    cout << "INSERT NUMBER:";
    for (int i = 0; i < 15; i++) {
        cin >> arr[15];
    }
    for(int i = 0; i < 15; i++){
        int a1, a2, temp;
        a1 = arr[i] / 10;
        a2 = arr[i] % 10;
        temp = a2 * 10 + a1;
        arr[i] = temp;
    }
    
    for (int i = 0; i < 15; i++) {
       cout << temp << " ";
    }
    return 0;
}




10)
#include <iostream>
using namespace std;
int main(){
    int a[5]={4,2,1,3,5};
    int b[5]={7,6,9,8,10};
    int c[10];
 
    int k=0;
 
    for(int i=0;i<5;i++){
    c[k++]=a[i];
    }
    for(int i=0;i<5;i++){
    c[k++]=b[i];
    }
    
    
    int temp;
    for (int i = 0; i < 10 - 1; i++) {
        for (int j = 0; j < 10 - i - 1; j++) {
            if (c[j] < c[j + 1]) {
                temp = c[j];
                c[j] = c[j + 1];
                c[j + 1] = temp;
            }
        }
    }
 
    for(int i = 0; i<10; i++){
        cout << c[i] << " ";
    }
    return 0;
}




12)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    int n = 0;
    int index1 = 0;
    int index2 = 0;
    for(int j = 0; j <=size; j++){
        n++;
        for(int i = n; i<=size; i++){
            if(arr[j] == arr[i]){
                 index1 = j;
                 index2 = i;
                }
        }
    }
 
            cout << "INDEXES OF TWINCE NUMBERS:" << index1 << ", " << index2 << endl;
            
            return 0;
            
}
    
    


19)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    double d, e;
    d = arr[1] - arr[0];
    for (int i = 2; i < size; i++)
    {
        e = arr[i] - arr[i - 1];
        if (e != d)
        {
            cout << "IT'S NOT ARITHMETIC PROGRESSION" << endl;
        }
        else if(e == d) {
                cout << "IT IS ARITHMETIC PROGRESSION" << endl;
        }
    }
            return 0;
            
}
    
    



20)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    int k =0;
    
    double q = (double) arr[1] / arr[0];  
    for (int i = 1; i < size-1; i++){
    if ((double)arr[i+1] / arr[i] != q) {
        k++; 
        break;
    }
    }
    
    if (k==0){
    cout << "IT IS GEOMETRIC PROGRESSION, q:" << q << endl;
    }
    else{
        cout <<"IT ISN'T GEOMETRIC PROGRESSION" << endl;
    }
    
return 0;
}




21)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    int k =0;
    int index;
    
    for(int i = 0; i < size; i++){
        if(arr[i] > arr[i+1]){
            cout << "INDEX:" << i << " " << endl;
            k++;
        }
    }
    cout << "SUM OF THIS NUMBERS:" << k;
    
return 0;
}
    




22)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    for(int i = 1; i < size; i++){
        if(arr[i-1] < arr[i] < arr[i+1]){
            cout << "RESULT:" << arr[i-1] << ", " << arr[i] << ", " << arr[i+1] << endl;
          
        }
    }

    
return 0;
}
    



23)
#include <iostream>
 
using namespace std;
 
int main()
{
    int *arr;
    int size;
 
    cout << "INSERT SIZE OF ARRAY: ";
    cin >> size;
 
    arr = new int[size];
 
    cout << "INSET ARRAY:";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }
    
    
    int max = arr[0];
    int min = arr[0];
    int indexMAX = 0;
    int indexMIN = 0;
    
    for(int i = 0; i < size; i++){
       if(max < arr[i]){
           indexMAX = i;
       }
       
       if(min > arr[i]){
           indexMIN = i;
       }
    }
    
    if((arr[indexMIN] - arr[indexMAX]) > 0){
        cout << "RESULT:" << arr[indexMIN] - arr[indexMAX];
    }
    
    else if((arr[indexMAX] - arr[indexMIN]) > 0){
        cout << "RESULT:" << arr[indexMAX] - arr[indexMIN];
    }

    
return 0;
}
    





MATRIX HIGH LVL:
3)
#include <iostream>
 
using namespace std;
 
int main(){
    int n, m;
        cout << "INSERT SIZE OF ARRAY(N and M): ";
    cin >> n >> m;
    int** arr = new int* [n];
    int* max_elements = new int[n];
    for (int i = 0; i < n; i++)
    {
        arr[i] = new int[m];
    }
    cout << "INSERT MATRIX:" << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> arr[i][j];
        }
    }
    
     for (int i = 0; i < n; i++) {
        for(int j = 0; j < m; j++){
        arr[i][j] *= -3;
        }
    }
    
     cout << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cout << arr[i][j] << ' ';
        }
        cout << '\n';
    }
  
    
return 0;
}
    





6)
#include <iostream>
 
using namespace std;
 
int main(){
    int n, m;
        cout << "INSERT SIZE OF ARRAY(N and M): ";
    cin >> n >> m;
    int** arr = new int* [n];
    int* max_elements = new int[n];
    for (int i = 0; i < n; i++)
    {
        arr[i] = new int[m];
    }
    cout << "INSERT MATRIX:" << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> arr[i][j];
        }
    }
    
    int count = 0, temp;
    
    for(int i = 1; i < n; i++){
        temp = 0;
 
        for(int j = 0; j < m; j++)
            for(int k = 0; k < m ;k++)
                if(arr[0][k] == arr [i][j]){
                    temp ++;
                }
            if(temp > (m/2))
                count ++;
    }
     cout << "RESULT:" << count << endl;
    
return 0;
}




7)
#include <iostream>
 
using namespace std;
 
int main(){
    int n, m, k;
        cout << "INSERT SIZE OF ARRAY(N and M): ";
    cin >> n >> m;
    int** arr = new int* [n];
    int* max_elements = new int[n];
    for (int i = 0; i < n; i++)
    {
        arr[i] = new int[m];
    }
    cout << "INSERT MATRIX:" << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> arr[i][j];
        }
    }
       
    cout << "INSERT k:";
    cin >> k;
    int index;
    int jndex;
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < m; j++){
            if(k == arr[i][j]){
                i = index;
                j = jndex;
            }
        }
        cout << index << ", " << jndex << endl;
    }
return 0;
}
    




11)
#include <iostream>
 
using namespace std;
 
int main(){
    int n, m;
        cout << "INSERT SIZE OF ARRAY(N and M): ";
    cin >> n >> m;
    int** arr = new int* [n];
    int* max_elements = new int[n];
    for (int i = 0; i < n; i++)
    {
        arr[i] = new int[m];
    }
    cout << "INSERT MATRIX:" << endl;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < m; ++j) {
            cin >> arr[i][j];
        }
    }
        int min = arr[0][0];
        int max = arr[0][0];
        int index;
        int jndex;
        int indexMIN;
        int jndexMIN;
        
     for (int i = 0; i < n; i++){
        int temp;
     for (int j = 1; j < m; j++){
        if(min > arr[i][j]){
           min = arr[i][j];
           i = indexMIN;
           j = jndexMIN;
           if(max < arr[indexMIN][jndexMIN]){
               max = arr[indexMIN][jndexMIN];
               indexMIN = index;
               jndexMIN = jndex;
           }
        }
     }
     }
     cout << "INDEX:" << index << ", " << jndex << endl;
    
return 0;
}
    




15)
#include <iostream>
using namespace std;
 
int main()
{
    const int n=4;
    int i, j;
    int a[n][n];
    for(i=0; i<n; i++)
    {
        for(j=i; j<n; j++)
        {
        a[j][i] = 0;
        a[i][j] = 2;
 
        }
        a[i][i] = 1;
    }
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
        cout<<a[i][j]<<" ";
 
        }
        cout<<endl;
    }
 
}

    



17)
#include <iostream>
using namespace std;
int main()
{
    int n, m;
    cout << "INDERT SIZE OF MATRIX (N and M):";
    cin >> n >> m;
    int arr[n][m];
    for(int i = 0; i < n; ++i){
        arr[i][0] = 1;
    }
    for(int i = 0; i < m; ++i){
        arr[0][i] = 1;
    }
    for(int i = 1; i < n; ++i)
        for(int j = 1; j < m; ++j)
            arr[i][j] = arr[i - 1][j] + arr[i][j - 1];
    for(int i = 0; i < n; ++i){
        cout << " ";
        for(int j = 0; j < m; ++j){
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}





22)
#include <iostream>
using namespace std;
 
int main()
{
    int n;
    cout << "INSERT N:";
    cin >> n;
    int i, j;
    int a[n][n];
    for(i=0; i<n; i++)
    {
        for(j=i; j<n; j++)
        {
        a[j][i] = 2;
        a[i][j] = 0;
 
        }
        a[i][i] = 1;
    }
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
        cout<<a[i][j]<<" ";
 
        }
        cout<<endl;
    }
    
 return 0;
}





23)
#include <iostream>
using namespace std;
 
int main(void){
    int arr[5][5];
    for(int i=0; i<5; i++){
        for(int j=0; j<5; j++){
            if(i==5/2 || j==5/2){
                arr[i][j]=1;
            }
            else{
                arr[i][j]=0;
            }
             cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}





25)
#include <iostream>
using namespace std;
 
int main(void){
    int arr[5][5];
    for(int i=0; i<5; i++){
        for(int j=0; j<5; j++){
            
            if(i == 3 && j == 4){
                arr[i][j]=0;
            }
            else if(i == 1 && j == 0){
                arr[i][j] = 0;
            }
            else if(i == 1 && j == 4){
                arr[i][j] = 0;
            }
            else if(i == 3 && j == 0){
                arr[i][j] = 0;
            }
            else if(i == 2 && i == 2){
                arr[i][j] = 0;
            }
            else{
                arr[i][j]=1;
            }
             cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}





30)
#include <iostream>
using namespace std;
 
int main(void){
    int arr[5][5];
    for(int i=0; i<5; i++){
        for(int j=0; j<5; j++){
            if(i == 1 && j == 2){
                arr[i][j]=0;
            }
            else if(i == 2 && j == 1){
                arr[i][j] = 0;
            }
            else if(i == 2 && j == 3){
                arr[i][j] = 0;
            }
            else if(i == 3 && j == 2){
                arr[i][j] = 0;
            }
            else{
                arr[i][j]=1;
            }
             cout << arr[i][j] << " ";
        }
        cout << endl;
    }
    return 0;
}





